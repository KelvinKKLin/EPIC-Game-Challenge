./assets/images/Blackboard.jpg%%./assets/images/Sensei_Happy.png%%./assets/images/Sensei.png%%Professor Sensei%%Welcome young one, to your first lesson in Python Programming.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Happy.png%%./assets/images/Sensei.png%%Professor Sensei%%My name is Professor Sensei, and I will be guiding you in your journey towards complete Python mastery.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Happy.png%%./assets/images/Sensei.png%%Professor Sensei%%Are you ready? Let us begin!%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%First of all, what is Python programming?%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%To program is to essentially develop a series of steps, also known as an algorithm, in order to allow the computer to solve a problem.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%The problem can be as simple or as complicated as you want; however, all problems that computers solve have one thing in common: they are structured in such a way so that a predefined series of steps will allow you to arrive at the desired result.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%Think of the problem as a cake you're trying to bake, and an algorithm as the recipe you use to bake the cake.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%Now, before we get more technical, let's try writing some code.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%Open up your favourite Python IDE like IDLE and type in the following: print "Hello world"%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%Press enter.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%You should see "Hello World" printed back onto the screen. %%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%Now, computers are logical entities, young one. They do exactly as you tell it, no more, no less.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%Whenever you use the print command, it will output something to the screen.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%But be warned: what follows a print statement must be a string literal. For now, that means that the stuff  you want to print must be surrounded in quotation marks. We'll worry about the details later.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Happy.png%%./assets/images/Sensei.png%%Professor Sensei%%Try it! Get Python to print out your name.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%Did you get it? I simply typed: print "Professor Sensei"%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%It worked? Great!%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Happy.png%%./assets/images/Sensei.png%%Professor Sensei%%From this moment on, just like that, you will continue to write commands for Python to execute, in a logical order, in order to solve more complicated problems.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%But I think that is enoungh programming for today. Let's get into the theoretical side of things, since it is as important if not more, for one to know about computing as well as programming.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%Well, what is computing?%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%To begin, let's revisit our definitioon for programming. To program is to devise a series of steps, known as an algorithm, in order to solve a problem.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%To compute, therefore, is to write programs for computers to solve problems, to create smart products, to explore our world, and to connect people. It expands beyond simple programming, and it expands into the fields of science, mathematics, information technology, and engineering. It is more than just solving a problem: it is taking a holistic approach into designing a product, taking into account the risks and benefits from a design decision, the health and safety of those using your program, and quite possibly the environment, and the impact that program has on society.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%To compute is to incorporate hardware with software.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%Before we end for today, let's take a look at how that happens.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%The computer consists of 5 essential parts, in our simplified model of a functional computer. %%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%These are: input devices, the CPU, the RAM, the storage, and the output devices.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%Input devices include all input from the user, whether it is keyboard input, mouse input, or even webcam input. It is basically the computer's way to gather information about the outside world. %%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%Please know, young one, that an input device is only used to gather information about the outside world. It is not used to display information to the users of the program.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%Peripherals which display information to users are called output devices. These can include anything from monitors, to printers, to LCDs or blinking lights.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%Now, aside from the obvious, there are 3 parts that we have yet to discuss: the CPU, the RAM, and the storage. Let's start with the CPU.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%The CPU, short for central processing unit, is essentially the brain of the computer. It bascially goes through each line of your program, stored in RAM, decodes each line of your program, and executes the command in what is known as a fetch-execute cycle. Once this is done, it fetches the next line of your program and it executes that. This can happen millions of times each second.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%Now, where might your program be stored so that the CPU can fetch it?%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%Well, it is stored in the RAM!%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%RAM, short for Random Access Memory (also known as MAIN MEMORY), is the only memory that the CPU can directly access aside from its cache (which is beyond the scope of this game). It is volatile memory, which means that whatever is in your RAM will be erased once your computer is turned off. In exchange, RAM (or MAIN MEMORY) is super fast compared to SECONDARY MEMORY.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%Storage, or SECONDARY MEMORY, is the last part of the computer we will examine before we look at how your programs are executed. Storage essentially refers to your Hard Drive (HDD) or your SSD, which is non-volatile memory. That is, the data you put in this memory will not be erased when you turn of your computer. %%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%Now that we have all the parts of the computer, here is how your program is executed. First, when you run your program, Python works its magic, and it loads your program onto the RAM.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%Then, the CPU fetches instructions from your program from the RAM, and decodes it.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%If the instruction requires external input, the CPU will call upon the input devices. If the instruction requires something to be displayed, the CPU will call upon the output devices. And finally, if the instruction requires something to be written to the storage, then the CPU will call upon the secondary memory.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Nutral.png%%./assets/images/Sensei.png%%Professor Sensei%%Once the CPU is done executing that instruction, it will go back to RAM to retrieve the next instruction, and the process repeats.%%0%%0
./assets/images/Blackboard.jpg%%./assets/images/Sensei_Happy.png%%./assets/images/Sensei.png%%Professor Sensei%%And that, young one, concludes our lesson for today.%%0%%0