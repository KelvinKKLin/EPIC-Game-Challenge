Blackboard.jpg%%Sensei_Happy.png%%Sensei.png%%Professor Sensei%%Welcome, young one, to your second lesson in Python programming!%%0%%0
Blackboard.jpg%%Sensei_Happy.png%%Sensei.png%%Professor Sensei%%Today, we will be learning how to write more commands so that we can create more sophisciated programs.%%0%%0
Blackboard.jpg%%Sensei_Happy.png%%Sensei.png%%Professor Sensei%%Let's start off by looking at variables.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%In Python, a variable is a programming entity which references a value by a given name. For instance x = 2 allows you to refer to the value 2 by the name x. %%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%That being said, every variable in Python must contain two things: a name and a value. To create a variable, simple type its name, the equal sign (=), and then a value. Try it! Go to your favourite Python IDE (like IDLE), and create the a variable called "name" that holds your name.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Did you get it? For me, I typed name = "Professor Sensei"%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Notice that I put "Professor Sensei" in quotations. This makes it a string literal. In other words, it tells Python that "Professor Sensei" is a word and not a variable or a command: it tells Python to take the words enclosed in quotes as-is, and not interperte it as a variable or as a command.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%That being said, there are certain names for creating variables. They must start with either a letter or an underscore, but after that, they can contain letters, numbers, or underscores. They CANNOT contain spaces. They also cannot be predefined words like print. So names like projectKanon8, project_kanon8, ProjectKanon8, and _ProjectKanon8 would be allowed, but names like 8projectKanon, print, or project kanon8 would not be allowed.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%The values that variables hold also have a type. That is, they can be catagorized into different types of data.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%For now, you need to know the following types: int, float, long, string (a.k.a str), boolean, and list.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%This may seem like a lot, but keep stay for a while, and you'll be a master in no time.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%The int, float, and long types all refer to numbers.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%int-typed numbers are essentially whole numbers. They have a smaller range than long numbers, but they are faster to compute. They are represented with 32-bits. You don't need to worry about what that means for now, but know that there is a maximum number that an int-type can represent.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%float-typed numbers are essentially decimal numbers that fall within the domain of int-typed numbers. Whenever possible, you should use int-typed data instead of floats, as there are inaccuracies in representing decimal numbers in binary on the computer. This essentially causes errors as the calculations become more complex as parts of the number could be rounded off or ignored.%%0%%0
Blackboard.jpg%%Sensei_Sad.png%%Sensei.png%%Professor Sensei%%Bottom line, young one, be careful when using float-typed numbers.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Any number that exceeds the domain of ints can be represented by long-typed numbers, as long as there is sufficient RAM. That is, the maximum long-typed number that a computer can represent depends on the computer. However, in being able to represent larger numbers, you have to give up speed. It takes much longer to compute long-typed numbers than it does to compute int-typed numbers.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%And that, is all of the numbers. Next, let's look at strings, also known as str.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Remember string literals? Basically, a string is any word, number, letter, or symbol enclosed in quotes. We will learn how to process strings later on.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%The Boolean, named after George Boole, is essentially a True or False value.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Finally, a list is simply a data type that allows you to store multiple values under one name.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Now that you know everything there is to know about variables, what can you do with them?%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Well, since you know how to output things to the screen, let's try to get input.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%In Python, you get input by using the command input(). In the brackets, you pass in a prompt as a string literal. That is, if you want your user to input their age, you would use input("Please input your age"). Try it in your favourite Python IDE!%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Usually, when you get input, you would want to store it, so that you can use it later. Of course, you would do that with a variable. So, to store the value of the user's age, I would write something like age = input("Please input your age")%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Now, if I wanted to output the user's age, I would simply use print age%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Notice that there are no quotations around age. This tells Python that age is a variable and not a string literal, and the value of age is outputted instead of "age".%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Now try it yourself! Try to create a program that asks a user for their height, and output it to the screen.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Did you get it? For me, I used these two lines of code:%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%height = input("Please input your height")%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%print "Height", height%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Let's take a closer look at the second statement: print "Height", height%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%The print statement prints the two parts in order. First, it prints the string literal "Height" followed by a space, followed by the value of the variable height. For our intents and purposes, the comma simply means "add a space between the two values" to Python. Can you do the same with the age example we worked on above?%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Finally, before we end for today, let's look at for loops.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Unlike humans, computers are really good at preforming repetitive tasks, and as a bonus, they don't complain!%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%So naturally, we will take advantage of this in order to create programs that can preform repetitive tasks.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%To do this, we use something called the "for loop". In Python, it is written as such: for <<variable>> in <<collection>>:%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%followed by a body, which is a series of indented code. The indented code tells Python to repeat that code for each iteration of the collection.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Recall a few moments ago when we discussed lists. A list is a collection of data that can be used in a for loop. In a for loop, Python will first assign the variable the first value of the collection. Then, the body of the loop will be run. Then Python will assign the second value of the list to the variable and execute the body. This will repeat until the entire list has been exhausted.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Now, how is this helpful?%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Well, we can easily generate a list of numbers starting from 0, using the range() command.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%So, to generate a list from 0 to 9, we would simply say range(10), and it would yield the list [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Therefore, since a list is a collection, we can write: for i in range(10):, and this would create a loop that would loop 10 times.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Protip: for i in range(x), where x is an integer, creates a loop that will repeat x times.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Now, let's see the value of our variable i. Using the header above (for i in range(10):), we will go to a new line, indent once (press tab), and we will write: print i%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Now, run your program. You should see the outputs 0, 1, 2, 3, 4, 5, 6, 7, 8, 9. This means that the variable i got assigned the n-th term of the list. If this is unclear to you, young one, do not worry. Programming takes time to learn, and this will all make sense in due time. %%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%For now, just now that you can use a for loop to repeat code x times using the header for i in range(x):%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Now, let's combine everything we've learned before we end for today. I want you to create a program that will take an input from the user, denoting their age, and then output all of the numbers from 0 to their age-1.%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%Are you finished?%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%This is how I did it:%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%age = input("Please input your age")%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%for i in range(age):%%0%%0
Blackboard.jpg%%Sensei_Nutral.png%%Sensei.png%%Professor Sensei%%print i%%0%%0
Blackboard.jpg%%Sensei_Happy.png%%Sensei.png%%Professor Sensei%%Well young one, you did well today. I hope you are starting to understand programming. If the theory is unclear, don't worry. Funny thing with programming is that the theory will become clear with more practice. For now, focus on understanding what the code does. If you can manage that, then all will become clear in due time.%%0%%0
Blackboard.jpg%%Sensei_Happy.png%%Sensei.png%%Professor Sensei%%Until next time!%%0%%0
